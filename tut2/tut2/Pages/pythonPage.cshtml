@page
@model tut2.Pages.pythonPageModel

@* define variables in this scope *@
@{
    String title = pythonPageModel.title;
    String pythonId = pythonPageModel.pythonId;
    String pyLoopId = pythonPageModel.pyLoopId;
    String pyLoopText = pythonPageModel.pyLoopText;
}

<ul class="p-3">
    
    <span class="anc" id=@pythonId></span>
    <div>
        <h1>@title</h1>
    </div>
    
    <span class="anc" id=@pyLoopId></span>
    <div>
        <h2><li>@pyLoopText</li></h2>
    </div>
   
    
    <ul>
        <li>
            <h5 id="python-for-loops">for Loops</h5>
    <div class="code-container">
    
    <br>

    A <i>for loop</i> is repeating something a set number of times. In simplier terms it means to repeat a task a given number of times. Sometimes one wants to access a number aligned with which loop one is on. For example one can start at the number 0 and keep adding 1 until the number hits 9. 
    <br>
    <br>
    Then, one can use that number (call it <code class="language-python">i</code>) to access certain parts of a data structure or list. This is called enumerating over an object.
    <br>
    <br>
    Say one defines <code class="language-python">lst</code> as <code class="language-python">[55, 44, 223, 77]</code>. One can loop over the length of that list and use <code class="language-python">i</code> to get each element at said location.
    
    <pre><code class="language-python" id="for-loop-python-example">

lst = [55,44,223,77]

for i in range( len( lst ) - 1 ):
    # get lst element by "[ ]" operator
    print( lst[i] )
    </code></pre>
    <b>Outputs:</b>
    <pre><code class="language-python" id="for-loop-python-example">
    <pre><code class="language-python">
>>> 55
>>> 44
>>> 223        
    </code></pre>
    </code></pre>
    </div>
        </li>
    </ul>
    

 <ul>
        <li>
            <h5 id="python-while-loops">while Loops</h5>
        
                while loops are written as:
                <br>
                <code><pre>
    while condition:
        do something                    
                </pre></code>
                    


            
        </li>
    </ul>

</ul>
<h2>
        <li id="python-conditionals">conditionals</li>
    </h2>
    <ul>
        <li>
            <h5 id="python-conditionals-logical-operators">logical operators</h5>
        
   
            
        </li>
    </ul>

 <ul>
        <li>
            <h5 id="python-conditionals-bitwise-operators">bitwise operators</h5>
        

        </li>
    </ul>

</ul>

</ul>


